!pip install scikit-learn-extra
import numpy as np
from sklearn_extra.cluster import KMedoids

data = {'x' : [7, 2, 3, 8, 7, 4, 6, 7, 6, 3],
        'y' : [6, 6, 8, 5, 4, 7, 2, 3, 4, 4]}
x = [[i, j] for i, j in zip(data['x'], data['y'])]
data_x = np.asarray(x)
model_km = KMedoids(n_clusters=3)
km = model_km.fit(data_x)
labels = km.labels_
cluster_1 = [x[i] for i in range(len(labels)) if labels[i] == 0]
cluster_2 = [x[i] for i in range(len(labels)) if labels[i] == 1]
print("C1 :", cluster_1)
print("C2 :", cluster_2)
print("Cluster centers  :",km.cluster_centers_)


#LINKAGE

import numpy as np
import matplotlib.pyplot as plt
from scipy.cluster.hierarchy import linkage, dendrogram
distance_matrix = np.array([
    [0, 9, 3, 6, 11],
    [9, 0, 7, 5, 10],
    [3, 7, 0, 9, 2],
    [6, 5, 9, 0, 8],
    [11, 10, 2, 8, 0]
])

condensed_distance_matrix = distance_matrix[np.triu_indices(len(distance_matrix), k=1)]

Z = linkage(condensed_distance_matrix, method='complete')
plt.figure(figsize=(8, 6))
dendrogram(Z, labels=['a', 'b', 'c', 'd', 'e'], leaf_rotation=90)
plt.title("Dendrogram for Complete-Linkage Hierarchical Clustering")
plt.xlabel("Samples")
plt.ylabel("Distance")
plt.show()

X = linkage(condensed_distance_matrix, method='average')
plt.figure(figsize=(8, 6))
dendrogram(X, labels=['a', 'b', 'c', 'd', 'e'], leaf_rotation=90)
plt.title("Dendrogram for Average-Linkage Hierarchical Clustering")
plt.xlabel("Samples")
plt.ylabel("Distance")
plt.show()

Y = linkage(condensed_distance_matrix, method='single')
plt.figure(figsize=(8, 6))
dendrogram(Y, labels=['a', 'b', 'c', 'd', 'e'], leaf_rotation=90)
plt.title("Dendrogram for single-Linkage Hierarchical Clustering")
plt.xlabel("Samples")
plt.ylabel("Distance")
plt.show()